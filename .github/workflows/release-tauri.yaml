name: 'publish'

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf base-devel
          # Install makepkg for Arch Linux package building
          sudo apt-get install -y pacman
          sudo ln -s /usr/bin/pacman /usr/bin/makepkg

      - name: install frontend dependencies
        run: bun install # change this to npm, pnpm or bun depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: r2uploader-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      - name: Build Arch Linux package
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          # Create PKGBUILD
          cat <<EOL > PKGBUILD
          pkgname=r2uploader
          pkgver=$(bun -p "require('./package.json').version")
          pkgrel=1
          pkgdesc="R2Uploader application"
          arch=('x86_64')
          license=('custom')
          depends=('webkit2gtk' 'librsvg' 'libappindicator-gtk3')
          source=("r2uploader-\${pkgver}.tar.gz")
          sha256sums=('SKIP')

          build() {
            cd "\${srcdir}/r2uploader-\${pkgver}"
            bun install
            bun run build
          }

          package() {
            cd "\${srcdir}/r2uploader-\${pkgver}"
            mkdir -p "\${pkgdir}/usr/bin"
            cp -r dist/* "\${pkgdir}/usr/bin/"
          }
          EOL

          # Build package
          makepkg -s --noconfirm
          mv *.pkg.tar.zst r2uploader.pkg.tar.zst
